#!/usr/bin/env bash

book=0

if [[ $# -eq 0 ]]
then
    book=1
fi

run_pandoc() {
    out=$1
    chapters="${@:2}"
    cd book
    pandoc -t pdf \
             -o "$out" \
             -F pandoc-crossref \
             -M chapters \
             -M title='Foundations of Reinforcement Learning with Applications in Finance' \
             -M author='Ashwin Rao, Tikhon Jelvis' \
             --pdf-engine=xelatex \
             --template ../templates/latex.template \
             --top-level-division=part \
             $( (( book == 1 )) && printf %s '--toc' ) \
             $chapters
    cd ..
}

if [[ $book == 1 ]]
then
    out="book.pdf"

    echo "Building $out from:"
    while read chapter
    do
        echo "book/$chapter/${chapter}.md"
        names+=("$chapter/${chapter}.md")
    done < <(grep -vxE -e '(^#.*$|^\s*$)' structure)
    # Regexp matches blank lines and comments, which we filter out
    # with grep

    run_pandoc "$out" "${names[@]}"
else
    # Several equivalent options:
    #
    # bin/to-pdf chapter1
    # bin/to-pdf chapter1/chapter1
    # bin/to-pdf chapter1/chapter1.md
    # bin/to-pdf book/chapter1/chapter1.md
    file=$(basename $1)
    name="${file%.*}"
    target="$name/$name.md"
    out="${target%.*}.pdf"

    echo "Converting book/$target to book/$out."
    run_pandoc "$out" "$target"
fi
